{
    "collab_server" : "",
    "contents" : "#*********************************************************************#\n#Master File that calls all other functions\n\n\n#CHANGE ME!!\n#find the correct working directory change to wherever you put the code\n#Remember to use a forward slash e.g. 'C:/Users/Peter' not!!!! 'C:\\Users\\Peter'\nsetwd('C:/Users/Peter/Desktop/Peter_Hedley_Dissertation/Earthquake_v4')\n\n\n#Setup\nlibraries <- c('evd','colorRamps','scales','raster','SDMTools','rgdal','fitdistrplus','epiR','rgeos','ggplot2','maptools','broom','ggmap','plyr','stats4','QRM')\nlapply(libraries, require, character.only = TRUE)\n\n\nworkingdir1 = getwd()\nworkingdir2 = paste(getwd(),'/ALL_FUNCTIONS',sep = '')\n\n#Admin stuff with libraries and allocating a large enough expression size\ngpclibPermit()\noptions(expressions=100000)\nsetwd(workingdir2)\n\n\n\n\n#**********************************************************************#\n\n#Get the Historical EQ Data, FL Data, and Map from Google Maps API\nsource('02_01_Get_Data_Ready.R')\nEQ_Data <- get_EQ_data()\nFL_Data <- get_FL_data()\nMap <- get_Map()\n\n\n#Plot various graphs of events, Fault_Lines and Fl's with Mw assigned\nsource('02_02_Plot_Events.R')\nPlot_EQ_Events(EQ_Data,FL_Data,Map)\nPlot_EQ_Events_Mw(EQ_Data,Map)\nPlot_EQ_Data(EQ_Data)\nPlot_Fault_Lines(FL_Data,Map)\n#This function you need to go through manually inside the file\nPlot_Fault_Lines_Mw(FL_Data,Map)\n\n\n#Get the Population Data/ Density\nsource('02_01_Get_Data_Ready.R')\n#This function you also need to go through manually inside the file\nPopulation_Data <- get_pop_Data()\n\n#Plot the Population Data\nsetwd(workingdir2)\nsource('02_11_Plot_Pop_Data.R')\n#Loading file to save time- processing takes a while\nload(file = 'FORTIFIED.R')\nplotPop(Population_Data, Map,Pop.sp3.points)\n\n#GET THE AMAX SERIES FOR ALL DATA\nsource('02_04_GetAMAXSERIES.R')\nAMAX <- get_AMAX(EQ_Data)\n\n\n#Determine the Gamma series for all of Turkey + plot\nsource('02_03_Get_Distribution_Gamma_V3.R')\nMLE_values <- fit_distribution(AMAX)\nret_p <- seq(10,10000,by=10)\nplot_Gamma(MLE_values,ret_p)\n\n#Plot all distributions for all of Turkey AMAX series\nsource('02_15_Experiment_Distr.R')\nplot_Experiment1(AMAX,ret_p)\n\n#***********************************************************************#\n\n#Separate Data between Faults\n\n#Already done - see excel files in one of the folders can re-run \n#Match EQ Events to FL's\n#source('02_06_Match_EQ_To_Faults.R')\n#Matched_Data <- Match_Eq_To_FL(EQ_Data,FL_Data)\n\n#SAVE THE DF AS THERE IS A LOT OF COMPUTING TIME HERE\n#save(Matched_Data, file=\"Matched_EQtoFaultLines.rda\")\nload(\"Matched_EQtoFaultLines.rda\")\n\n#Plot the Faultline activity  = number of events for each fault\nsource('02_07_Plot_FL_Activity.R')\nplot_FL_Act(Map,FL_Data,Matched_Data)\n\n\n#**************************************************************#\n#Plot EQ events with their Mw\nsource('02_02_Plot_Events.R')\nPlot_EQ_Events_Mw(EQ_Data,Map)\n\n\n\nsetwd(workingdir2)\n#Now individual FL AMAX series\nsource('02_08_Export_Fault_Specific_Data.R')\nExport_Fl_Spec_Data(EQ_Data,FL_Data)\n\n#Get dataframe of combined AMAX series - sum of every AMAX for every fault in Turkey\n#not the AMAX for all of Turkey - many more values!!\nsource('02_09_Fault_Specific_Log_Norm_COMBFL_v1.R')\nAMAX.df <- Fl_Spec_Log_Norm()\n\n#Determine the Log-Normal series combined data\nsource('02_03_Get_Distribution_V3_FL_COMB.R')\nsource('03_03_Distributions.R')\nMLE_values2 <- fit_distribution(AMAX.df)\n\n\n\n#************************************************************************\n#Now experiment with the AMAx data one value at 7.1 every other at <4Mw\nret_p <- c(10,100,500,1000,10000)\nsource('02_16_Experiment_Distr2.R')\nplot_Experiment2(ret_p)\n\n\n\n#Plot / Calculate for both Gamma and Log_Norm Distributions\nfor (Distribution in c('Gamma','Log_Norm')){\n  \n  \n  #Calculate Return Periods for each Distribution from AMAX fl data (censored)\n  if (Distribution == 'Gamma'){\n    print('Gamma Distribution')\n    source('02_09_Fault_Specific_Gamma.R')\n    Fault_Spec_Gamma <- Fl_Spec_Gamma_Mw(ret_p)\n    fl2 <- Fault_Spec_Gamma\n    #Obtain return period Mw for certain values\n    Fault_Spec_Gamma <- get_rp_Mw(Fault_Spec_Gamma,ret_p)\n    Return_Period_Mw<- Fault_Spec_Gamma\n  }\n  \n  if (Distribution == 'Log_Norm'){\n    print('Log_Norm Distribution')\n    source('02_09_Fault_Specific_Log_Norm.R')\n    Fault_Spec_Log_Norm <- Fl_Spec_Log_Norm_Mw(ret_p)\n    fl2 <- Fault_Spec_Log_Norm\n    #Obtain return period Mw for certain values\n    Fault_Spec_Log_Norm <- get_rp_Mw(Fault_Spec_Log_Norm,ret_p)\n    Return_Period_Mw<- Fault_Spec_Log_Norm\n  }\n  \n  #Sort out admin stuff - directories etc.\n  setwd(workingdir2)\n  Newdir <- paste(getwd(),'/',Distribution,sep = '')\n  dir.create(Newdir)\n  Newdir <- paste(getwd(),'/',Distribution,'/FL_DISS_RASTER',sep = '')\n  dir.create(Newdir)\n  Newdir <- paste(getwd(),'/',Distribution,'/PLOTS',sep = '')\n  dir.create(Newdir)\n  \n  #Change the Values that are uncertain and over 8.8 back to the 8.8 value\n  Return_Period_Mw$X500[Return_Period_Mw$X500>8.8] <- 8.8\n  Return_Period_Mw$X1000[Return_Period_Mw$X1000>8.8] <- 8.8\n  Return_Period_Mw$X10000[Return_Period_Mw$X10000>8.8] <- 8.8\n  \n  #Plot the Faultline Mw\n  source('02_10_Plot_FL_Mw.R')\n  setwd(workingdir2)\n  plot_FL_Mw(Map,FL_Data,Return_Period_Mw,Return_Period_Mw,Distribution)\n  \n  #Save data if need to\n  #save.image(file=\"workspace2.RData\")\n  #load(\"workspace2.RData\")\n  \n  setwd(workingdir2)\n  \n  #Dissipate the fault lines with different power coefficients - sensitivity of hazard map\n  for (Dissipation_coeff in c(1.2)){\n    source('02_12_Setup2Diss.R')\n    Dissipate_Fault_Lines(Return_Period_Mw,FL_Data,Population_Data,Dissipation_coeff,Distribution)\n  }\n  \n  #Dissipation creates raster data as excel .csv files - combine all of these into one\n  for (Dissipation_coeff in c(1.2)){\n    setwd(workingdir2)\n    source('02_13_Combine_Raster.R')\n    Combine_FL_Diss(Population_Data,Dissipation_coeff,Distribution)\n  }\n  \n  #Plot the Hazard Map.\n  for (Dissipation_coeff in c(1.2)){\n    setwd(workingdir2)\n    source('02_13_Plot_Mw_Raster.R')\n    Combined_FL_Data <- plotMw_Raster2(Population_Data, Map,Dissipation_coeff,Distribution)\n  }\n  \n  #Using a dissipation coeff of 1.2 conduct risk sensitivity\n  for (Dissipation_coeff in c(1.2)){\n    Dissipation_coeff = 1.2\n    \n    # Vary population to the power of...\n    for (Risk_Coeff in c(1,2,5,10)){\n      Risk_Coeff = 5\n      setwd(workingdir2)\n      source('02_14_Risk_Map.R')\n      Create_Risk_CSV(Population_Data,Dissipation_coeff,Distribution,Risk_Coeff)\n      plot_Risk(Population_Data, Map,Dissipation_coeff,Distribution,Risk_Coeff)\n    }\n  }\n}\n\n\n\n\n\n",
    "created" : 1493202316918.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3812730237",
    "id" : "57E77C78",
    "lastKnownWriteTime" : 1493202673,
    "last_content_update" : 1493202673359,
    "path" : "C:/Users/Peter/Desktop/Peter_Hedley_Dissertation/Earthquake_v4/ALL_FUNCTIONS/01_01_Master.R",
    "project_path" : "ALL_FUNCTIONS/01_01_Master.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}